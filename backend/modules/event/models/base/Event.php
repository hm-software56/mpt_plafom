<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\event\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;

/**
 * This is the base-model class for table "event".
 *
 * @property integer $id
 * @property string $event_title
 * @property string $agenda
 * @property string $date_start
 * @property string $time_start
 * @property string $date_end
 * @property string $time_end
 * @property string $location
 * @property string $host
 * @property string $register_deadline
 * @property integer $user_id
 * @property string $contract
 * @property string $map
 * @property integer $created_by
 *
 * @property \backend\modules\event\models\User $user
 * @property \backend\modules\event\models\Invitation[] $invitations
 * @property string $aliasModel
 */
abstract class Event extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'event';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
                'updatedByAttribute' => false,
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['event_title', 'date_start', 'time_start', 'date_end', 'time_end', 'location'], 'required'],
            [['agenda', 'contract','map'], 'string'],
            [['date_start', 'date_end', 'register_deadline'], 'safe'],
            [['user_id'], 'integer'],
            [['event_title', 'location', 'host'], 'string', 'max' => 255],
            [['time_start', 'time_end'], 'string', 'max' => 100],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\models\User::className(), 'targetAttribute' => ['user_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'event_title' => Yii::t('app', 'Event Title'),
            'agenda' => Yii::t('app', 'Agenda'),
            'date_start' => Yii::t('app', 'Date Start'),
            'time_start' => Yii::t('app', 'Time Start'),
            'date_end' => Yii::t('app', 'Date End'),
            'time_end' => Yii::t('app', 'Time End'),
            'location' => Yii::t('app', 'Location'),
            'host' => Yii::t('app', 'Host'),
            'created_by' => Yii::t('app', 'Created By'),
            'register_deadline' => Yii::t('app', 'Register Deadline'),
            'user_id' => Yii::t('app', 'User ID'),
            'contract' => Yii::t('app', 'Contract'),
            'map' => Yii::t('app', 'Map'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\backend\modules\event\models\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInvitations()
    {
        return $this->hasMany(\backend\modules\event\models\Invitation::className(), ['event_id' => 'id']);
    }




}
