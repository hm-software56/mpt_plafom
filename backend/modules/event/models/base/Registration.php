<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\event\models\base;

use Yii;

/**
 * This is the base-model class for table "registration".
 *
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property string $gender
 * @property string $position
 * @property string $org_name
 * @property string $telephone
 * @property string $email
 * @property integer $invitation_id
 * @property string $code
 * @property string $date
 * @property string $title
 *
 * @property \backend\modules\event\models\Invitation $invitation
 * @property string $aliasModel
 */
abstract class Registration extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const GENDER_MALE = 'Male';
    const GENDER_FEMALE = 'Female';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'registration';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['first_name', 'last_name', 'gender', 'position', 'org_name', 'telephone', 'invitation_id', 'code', 'date', 'title'], 'required'],
            [['gender'], 'string'],
            [['invitation_id'], 'integer'],
            [['date'], 'safe'],
            [['first_name', 'last_name', 'position', 'org_name', 'title'], 'string', 'max' => 255],
            [['telephone'], 'string', 'max' => 45],
            [['email'], 'string', 'max' => 50],
            [['code'], 'string', 'max' => 100],
            [['invitation_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\event\models\Invitation::className(), 'targetAttribute' => ['invitation_id' => 'id']],
            ['gender', 'in', 'range' => [
                    self::GENDER_MALE,
                    self::GENDER_FEMALE,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'first_name' => Yii::t('app', 'First Name'),
            'last_name' => Yii::t('app', 'Last Name'),
            'gender' => Yii::t('app', 'Gender'),
            'position' => Yii::t('app', 'Position'),
            'org_name' => Yii::t('app', 'Org Name'),
            'telephone' => Yii::t('app', 'Telephone'),
            'email' => Yii::t('app', 'Email'),
            'invitation_id' => Yii::t('app', 'Invitation ID'),
            'code' => Yii::t('app', 'Code'),
            'date' => Yii::t('app', 'Date'),
            'title' => Yii::t('app', 'Title'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInvitation()
    {
        return $this->hasOne(\backend\modules\event\models\Invitation::className(), ['id' => 'invitation_id']);
    }




    /**
     * get column gender enum value label
     * @param string $value
     * @return string
     */
    public static function getGenderValueLabel($value){
        $labels = self::optsGender();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column gender ENUM value labels
     * @return array
     */
    public static function optsGender()
    {
        return [
            self::GENDER_MALE => Yii::t('app', self::GENDER_MALE),
            self::GENDER_FEMALE => Yii::t('app', self::GENDER_FEMALE),
        ];
    }

}
