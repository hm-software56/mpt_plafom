<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;

/**
 * This is the base-model class for table "content".
 *
 * @property integer $id
 * @property string $title
 * @property string $summary
 * @property string $details
 * @property string $photo
 * @property string $keywords
 * @property string $meta_keywords
 * @property string $start_date
 * @property string $end_date
 * @property string $created_date
 * @property string $updated_date
 * @property string $status
 * @property string $ref
 * @property integer $content_category_id
 * @property string $add_1
 * @property string $add_2
 * @property string $add_3
 * @property string $add_4
 * @property string $add_5
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property \backend\models\ContentCategory $contentCategory
 * @property \backend\models\User $createdBy
 * @property \backend\models\User $updatedBy
 * @property \backend\models\ContentTranslate[] $contentTranslates
 * @property \backend\models\Menu[] $menus
 * @property string $aliasModel
 */
abstract class Content extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const STATUS_1 = '1';
    const STATUS_0 = '0';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'content';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'start_date', 'content_category_id'], 'required'],
            [['summary', 'details', 'status', 'add_1', 'add_2', 'add_3', 'add_4', 'add_5'], 'string'],
            [['start_date', 'end_date', 'created_date', 'updated_date'], 'safe'],
            [['content_category_id'], 'integer'],
            [['title', 'photo', 'keywords', 'meta_keywords'], 'string', 'max' => 255],
            [['ref'], 'string', 'max' => 100],
            [['content_category_id'], 'exist', 'skipOnError' => true, 'targetClass' => ContentCategory::className(), 'targetAttribute' => ['content_category_id' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['updated_by' => 'id']],
            ['status', 'in', 'range' => [
                    self::STATUS_1,
                    self::STATUS_0,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'title' => Yii::t('app', 'Title'),
            'summary' => Yii::t('app', 'Summary'),
            'details' => Yii::t('app', 'Details'),
            'photo' => Yii::t('app', 'Photo'),
            'keywords' => Yii::t('app', 'Keywords'),
            'meta_keywords' => Yii::t('app', 'Meta Keywords'),
            'start_date' => Yii::t('app', 'Start Date'),
            'end_date' => Yii::t('app', 'End Date'),
            'created_date' => Yii::t('app', 'Created Date'),
            'updated_date' => Yii::t('app', 'Updated Date'),
            'status' => Yii::t('app', 'Status'),
            'ref' => Yii::t('app', 'Ref'),
            'content_category_id' => Yii::t('app', 'Content Category ID'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'add_1' => Yii::t('app', 'Add 1'),
            'add_2' => Yii::t('app', 'Add 2'),
            'add_3' => Yii::t('app', 'Add 3'),
            'add_4' => Yii::t('app', 'Add 4'),
            'add_5' => Yii::t('app', 'Add 5'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContentCategory()
    {
        return $this->hasOne(\backend\models\ContentCategory::className(), ['id' => 'content_category_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContentTranslates()
    {
        return $this->hasMany(\backend\models\ContentTranslate::className(), ['content_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMenus()
    {
        return $this->hasMany(\backend\models\Menu::className(), ['content_id' => 'id']);
    }




    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value){
        $labels = self::optsStatus();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus()
    {
        return [
            self::STATUS_1 => Yii::t('app', self::STATUS_1),
            self::STATUS_0 => Yii::t('app', self::STATUS_0),
        ];
    }

}
