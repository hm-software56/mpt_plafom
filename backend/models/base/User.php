<?php

// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "user".
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $full_name
 * @property string $type
 * @property string $status
 * @property string $created_at
 *
 * @property \backend\models\Content[] $contents
 * @property \backend\models\Content[] $contents0
 * @property \backend\models\ContentCategory[] $contentCategories
 * @property \backend\models\ContentCategory[] $contentCategories0
 * @property \backend\models\Gallery[] $galleries
 * @property \backend\models\Gallery[] $galleries0
 * @property \backend\models\Menu[] $menus
 * @property \backend\models\Menu[] $menus0
 * @property \backend\models\Slider[] $sliders
 * @property \backend\models\Slider[] $sliders0
 * @property \backend\models\SocialMedia[] $socialMedia
 * @property \backend\models\SocialMedia[] $socialMedia0
 * @property \backend\models\Video[] $videos
 * @property \backend\models\Video[] $videos0
 * @property string $aliasModel
 */
abstract class User extends \yii\db\ActiveRecord
{
    /**
     * ENUM field values
     */
    const STATUS_1 = '1';
    const STATUS_0 = '0';

    var $enum_labels = false;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }

    /**
     * @inheritdoc
     */
//    public function behaviors()
//    {
//        return [
//            [
//                'class' => TimestampBehavior::className(),
//                'updatedAtAttribute' => false,
//            ],
//        ];
//    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['username', 'password', 'full_name', 'type'], 'required'],
            [['status'], 'string'],
            [['created_at'], 'safe'],
            [['username', 'password', 'full_name', 'type'], 'string', 'max' => 255],
            [['username'], 'unique'],
            ['status', 'in', 'range' => [
                    self::STATUS_1,
                    self::STATUS_0,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'username' => Yii::t('app', 'Username'),
            'password' => Yii::t('app', 'Password'),
            'full_name' => Yii::t('app', 'Full Name'),
            'type' => Yii::t('app', 'Type'),
            'status' => Yii::t('app', 'Status'),
            'created_at' => Yii::t('app', 'Created At'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContents()
    {
        return $this->hasMany(\backend\models\Content::className(), ['created_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContents0()
    {
        return $this->hasMany(\backend\models\Content::className(), ['updated_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContentCategories()
    {
        return $this->hasMany(\backend\models\ContentCategory::className(), ['created_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContentCategories0()
    {
        return $this->hasMany(\backend\models\ContentCategory::className(), ['updated_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGalleries()
    {
        return $this->hasMany(\backend\models\Gallery::className(), ['created_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGalleries0()
    {
        return $this->hasMany(\backend\models\Gallery::className(), ['updated_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMenus()
    {
        return $this->hasMany(\backend\models\Menu::className(), ['created_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMenus0()
    {
        return $this->hasMany(\backend\models\Menu::className(), ['updated_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSliders()
    {
        return $this->hasMany(\backend\models\Slider::className(), ['created_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSliders0()
    {
        return $this->hasMany(\backend\models\Slider::className(), ['updated_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSocialMedia()
    {
        return $this->hasMany(\backend\models\SocialMedia::className(), ['created_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSocialMedia0()
    {
        return $this->hasMany(\backend\models\SocialMedia::className(), ['updated_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getVideos()
    {
        return $this->hasMany(\backend\models\Video::className(), ['created_by' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getVideos0()
    {
        return $this->hasMany(\backend\models\Video::className(), ['updated_by' => 'id']);
    }

    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value)
    {
        $labels = self::optsStatus();
        if (isset($labels[$value])) {
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus()
    {
        return [
            self::STATUS_1 => Yii::t('app', self::STATUS_1),
            self::STATUS_0 => Yii::t('app', self::STATUS_0),
        ];
    }

}
