<?php

// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;

/**
 * This is the base-model class for table "issue".
 *
 * @property integer $id
 * @property string $name
 * @property string $email
 * @property string $subject
 * @property string $message
 * @property string $telephone
 * @property string $file
 * @property integer $issue_category_id
 * @property string $created_date
 *
 * @property \backend\models\IssueCategory $issueCategory
 * @property string $aliasModel
 */
abstract class Issue extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'issue';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            //[['email', 'subject', 'message', 'issue_category_id', 'created_date'], 'required'],
            [['email', 'subject', 'message', 'created_date'], 'required'],
            [['message'], 'string'],
            [['issue_category_id'], 'integer'],
            [['created_date'], 'safe'],
            [['name', 'email', 'subject', 'telephone', 'file'], 'string', 'max' => 255],
            [['issue_category_id'], 'exist', 'skipOnError' => true, 'targetClass' => IssueCategory::className(), 'targetAttribute' => ['issue_category_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'email' => Yii::t('app', 'Email'),
            'subject' => Yii::t('app', 'Subject'),
            'message' => Yii::t('app', 'Message'),
            'telephone' => Yii::t('app', 'Telephone'),
            'file' => Yii::t('app', 'File'),
            'issue_category_id' => Yii::t('app', 'Issue Category ID'),
            'created_date' => Yii::t('app', 'Created Date'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getIssueCategory()
    {
        return $this->hasOne(\backend\models\IssueCategory::className(), ['id' => 'issue_category_id']);
    }

}
