<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;

/**
 * This is the base-model class for table "content_category".
 *
 * @property integer $id
 * @property string $title
 * @property integer $has_summary
 * @property integer $has_details
 * @property integer $has_photo
 * @property integer $has_keywords
 * @property integer $has_meta_keywords
 * @property integer $has_start_date
 * @property integer $has_end_date
 * @property integer $has_multi_attachment
 * @property string $status
 * @property string $created_date
 * @property string $updated_date
 * @property integer $has_add1
 * @property integer $has_add2
 * @property integer $has_add3
 * @property integer $has_add4
 * @property integer $has_add5
 * @property string $add_1
 * @property string $add_2
 * @property integer $is_legal_type
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property \backend\models\Content[] $contents
 * @property \backend\models\User $createdBy
 * @property \backend\models\User $updatedBy
 * @property \backend\models\ContentCategoryTranslate[] $contentCategoryTranslates
 * @property string $aliasModel
 */
abstract class ContentCategory extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const STATUS_1 = '1';
    const STATUS_0 = '0';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'content_category';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['has_summary', 'has_details', 'has_photo', 'has_keywords', 'has_meta_keywords', 'has_start_date', 'has_end_date', 'has_multi_attachment', 'has_add1', 'has_add2', 'has_add3', 'has_add4', 'has_add5', 'is_legal_type'], 'integer'],
            [['status'], 'string'],
            [['created_date', 'updated_date'], 'safe'],
            [['title', 'add_1', 'add_2'], 'string', 'max' => 255],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['updated_by' => 'id']],
            ['status', 'in', 'range' => [
                    self::STATUS_1,
                    self::STATUS_0,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'title' => Yii::t('app', 'Title'),
            'has_summary' => Yii::t('app', 'Has Summary'),
            'has_details' => Yii::t('app', 'Has Details'),
            'has_photo' => Yii::t('app', 'Has Photo'),
            'has_keywords' => Yii::t('app', 'Has Keywords'),
            'has_meta_keywords' => Yii::t('app', 'Has Meta Keywords'),
            'has_start_date' => Yii::t('app', 'Has Start Date'),
            'has_end_date' => Yii::t('app', 'Has End Date'),
            'has_multi_attachment' => Yii::t('app', 'Has Multi Attachment'),
            'status' => Yii::t('app', 'Status'),
            'created_date' => Yii::t('app', 'Created Date'),
            'updated_date' => Yii::t('app', 'Updated Date'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'has_add1' => Yii::t('app', 'Has Add1'),
            'has_add2' => Yii::t('app', 'Has Add2'),
            'has_add3' => Yii::t('app', 'Has Add3'),
            'has_add4' => Yii::t('app', 'Has Add4'),
            'has_add5' => Yii::t('app', 'Has Add5'),
            'add_1' => Yii::t('app', 'Add 1'),
            'add_2' => Yii::t('app', 'Add 2'),
            'is_legal_type' => Yii::t('app', 'Is Legal Type'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContents()
    {
        return $this->hasMany(\backend\models\Content::className(), ['content_category_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\backend\models\User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContentCategoryTranslates()
    {
        return $this->hasMany(\backend\models\ContentCategoryTranslate::className(), ['content_category_id' => 'id']);
    }




    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value){
        $labels = self::optsStatus();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus()
    {
        return [
            self::STATUS_1 => Yii::t('app', self::STATUS_1),
            self::STATUS_0 => Yii::t('app', self::STATUS_0),
        ];
    }

}
